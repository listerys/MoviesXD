{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT\\\\Desktop\\\\hackathon\\\\moviesxd\\\\src\\\\Components\\\\MoviePage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './MoviePage.css';\nimport Rating from '@material-ui/lab/Rating';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst APIKEY = \"?api_key=2fd99db9a55f38b3057e417bf6d2113a\";\nconst API = \"https://api.themoviedb.org/3/movie/\";\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\n\nconst MoviePage = props => {\n  _s();\n\n  const [movies, setMovies] = useState('');\n  useEffect(() => {\n    fetch(API + props.match.params.id + APIKEY).then(res => res.json()).then(data => {\n      console.log(data);\n      setMovies(data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"posterContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 3\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: IMG_API + movies.poster_path,\n          alt: movies.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 3\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-8\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movies.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 3\n        }, this), \"Year Released: \", movies.release_date, /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 7\n          }, this), \"Overview\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }, this), movies.overview]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), \"Total Movie Budget: \", movies.budget, /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            component: \"fieldset\",\n            mb: 3,\n            borderColor: \"transparent\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"legend\",\n              children: \"Controlled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Rating, {\n              name: \"simple-controlled\",\n              value: value,\n              onChange: (event, newValue) => {\n                setValue(newValue);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"fieldset\",\n            mb: 3,\n            borderColor: \"transparent\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"legend\",\n              children: \"Read only\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Rating, {\n              name: \"read-only\",\n              value: value,\n              readOnly: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"fieldset\",\n            mb: 3,\n            borderColor: \"transparent\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"legend\",\n              children: \"Disabled\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Rating, {\n              name: \"disabled\",\n              value: value,\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"fieldset\",\n            mb: 3,\n            borderColor: \"transparent\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              component: \"legend\",\n              children: \"Pristine\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Rating, {\n              name: \"pristine\",\n              value: null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MoviePage, \"o9ycCMO75svf1mz5gZLh0c5PZgQ=\");\n\n_c = MoviePage;\nexport default MoviePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviePage\");","map":{"version":3,"sources":["C:/Users/KIIT/Desktop/hackathon/moviesxd/src/Components/MoviePage.js"],"names":["React","useEffect","useState","Rating","Typography","Box","APIKEY","API","IMG_API","MoviePage","props","movies","setMovies","fetch","match","params","id","then","res","json","data","console","log","poster_path","title","release_date","overview","budget","value","event","newValue","setValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,iBAAP;AACA,OAAOC,MAAP,MAAmB,yBAAnB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;;AAGA,MAAMC,MAAM,GAAG,2CAAf;AACA,MAAMC,GAAG,GAAG,qCAAZ;AACA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,EAAD,CAApC;AACAD,EAAAA,SAAS,CAAE,MAAM;AACbY,IAAAA,KAAK,CAACN,GAAG,GAACG,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,EAAvB,GAA0BV,MAA3B,CAAL,CACCW,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAG;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACAR,MAAAA,SAAS,CAACQ,IAAD,CAAT;AACD,KALD;AAOD,GARM,EAQJ,EARI,CAAT;AAWA,sBACI;AAAK,IAAA,SAAS,EAAG,iBAAjB;AAAA,2BACI;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA,8BACV;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,gCACA;AAAA;AAAA;AAAA;AAAA,gBADA,eAEA;AAAK,UAAA,GAAG,EAAGZ,OAAO,GAAGG,MAAM,CAACY,WAA5B;AAAyC,UAAA,GAAG,EAAEZ,MAAM,CAACa;AAArD;AAAA;AAAA;AAAA;AAAA,gBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,cADU,eAKV;AAAK,QAAA,KAAK,EAAC,OAAX;AAAA,gCACA;AAAA,oBAAKb,MAAM,CAACa;AAAZ;AAAA;AAAA;AAAA;AAAA,gBADA,qBAEgBb,MAAM,CAACc,YAFvB,eAGI;AAAA,kCACA;AAAA;AAAA;AAAA;AAAA,kBADA,2BAGI;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAA;AAAA;AAAA;AAAA,kBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,kBALJ,EAMKd,MAAM,CAACe,QANZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAWI;AAAA;AAAA;AAAA;AAAA,gBAXJ,eAYQ;AAAA;AAAA;AAAA;AAAA,gBAZR,eAaQ;AAAA;AAAA;AAAA;AAAA,gBAbR,0BAc6Bf,MAAM,CAACgB,MAdpC,eAkBQ;AAAA,kCACJ,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,UAAf;AAA0B,YAAA,EAAE,EAAE,CAA9B;AAAiC,YAAA,WAAW,EAAC,aAA7C;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AACE,cAAA,IAAI,EAAC,mBADP;AAEE,cAAA,KAAK,EAAEC,KAFT;AAGE,cAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,QAAR,KAAqB;AAC7BC,gBAAAA,QAAQ,CAACD,QAAD,CAAR;AACD;AALH;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADI,eAWJ,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,UAAf;AAA0B,YAAA,EAAE,EAAE,CAA9B;AAAiC,YAAA,WAAW,EAAC,aAA7C;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,WAAb;AAAyB,cAAA,KAAK,EAAEF,KAAhC;AAAuC,cAAA,QAAQ;AAA/C;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXI,eAeJ,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,UAAf;AAA0B,YAAA,EAAE,EAAE,CAA9B;AAAiC,YAAA,WAAW,EAAC,aAA7C;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,UAAb;AAAwB,cAAA,KAAK,EAAEA,KAA/B;AAAsC,cAAA,QAAQ;AAA9C;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfI,eAmBJ,QAAC,GAAD;AAAK,YAAA,SAAS,EAAC,UAAf;AAA0B,YAAA,EAAE,EAAE,CAA9B;AAAiC,YAAA,WAAW,EAAC,aAA7C;AAAA,oCACE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAC,QAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AAAQ,cAAA,IAAI,EAAC,UAAb;AAAwB,cAAA,KAAK,EAAE;AAA/B;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnBI;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlBR;AAAA;AAAA;AAAA;AAAA;AAAA,cALU;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AA+DH,CA5ED;;GAAMnB,S;;KAAAA,S;AA8EN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './MoviePage.css';\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n\r\nconst APIKEY = \"?api_key=2fd99db9a55f38b3057e417bf6d2113a\";\r\nconst API = \"https://api.themoviedb.org/3/movie/\";\r\nconst IMG_API = \"https://image.tmdb.org/t/p/w1280\";\r\n\r\nconst MoviePage = (props) => {\r\n    const [movies, setMovies] = useState('');\r\n    useEffect (() => { \r\n        fetch(API+props.match.params.id+APIKEY)\r\n        .then(res => res.json())\r\n        .then(data =>{\r\n          console.log(data);\r\n          setMovies(data);\r\n        }); \r\n        \r\n      }, []);\r\n      \r\n\r\n    return (\r\n        <div className = \"posterContainer\">\r\n            <div class=\"row\">\r\n  <div class=\"col-4\">\r\n  <br/>\r\n  <img src= {IMG_API + movies.poster_path} alt={movies.title}/>\r\n  </div>\r\n  <div class=\"col-8\">\r\n  <h1>{movies.title}</h1>\r\n  Year Released: {movies.release_date}\r\n      <h2>\r\n      <br/>\r\n          Overview\r\n          <br/>\r\n          <br/>\r\n          <br/>\r\n          {movies.overview}\r\n      </h2>\r\n      <br/>\r\n          <br/>\r\n          <br/>\r\n          Total Movie Budget: {movies.budget}\r\n\r\n\r\n\r\n          <div>\r\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Typography component=\"legend\">Controlled</Typography>\r\n        <Rating\r\n          name=\"simple-controlled\"\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n        />\r\n      </Box>\r\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Typography component=\"legend\">Read only</Typography>\r\n        <Rating name=\"read-only\" value={value} readOnly />\r\n      </Box>\r\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Typography component=\"legend\">Disabled</Typography>\r\n        <Rating name=\"disabled\" value={value} disabled />\r\n      </Box>\r\n      <Box component=\"fieldset\" mb={3} borderColor=\"transparent\">\r\n        <Typography component=\"legend\">Pristine</Typography>\r\n        <Rating name=\"pristine\" value={null} />\r\n      </Box>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  </div>\r\n</div>\r\n</div>\r\n\r\n    )\r\n}\r\n\r\nexport default MoviePage;\r\n"]},"metadata":{},"sourceType":"module"}